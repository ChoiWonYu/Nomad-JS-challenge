js

document는 브라우저에 이미 존재하는 객체
->내 html에 접근할 수 있게 해주는 객체다. (읽기, 쓰기)
->js는 이미 html에 연결되어 있다.

-js로 정보를 가져올 수 있는 방법(html의 element를 가져오는 방법)

1)id 사용
const title=document.getElementById("title")
title.innerText='Got you!'

2)className 사용
const hellos=document.getElementsByClassName("hello");
->hello라는 className을 가진 element를 배열로 반환한다.

3)TagName
const title=document.getElementsByTagName("h1");
->h1태그의 element들을 반환한다.

4)querySelector
:element를 CSS방식으로 접근할 수 있다.

const title=document.querySelector(".hello h1");
->hello의 className(.hello)을 가진 h1을 반환한다.
->'#id'형식을 통해 id를 통해서도 element를 가져올 수 있다.
->디테일하게 element를 찾을 수 있다.
->같은 조건의 element들이 여러 개 있다면, 첫 번째 element를 반환한다.
->모두 가져오고 싶다면 querySelectorAll함수를 사용해야한다.

*element의 내부를 보고 싶다면 console.log 대신 console.dir를 사용한다.
->element를 객체형태로 보여준다.
->on으로 시작하는 event를 모두 볼 수 있다.

-Events

1.click
const handleTitleClick=()=>{
title.style.color="blue";
}
title.addEventListener("click",handleTitleClick);

2.mouseenter
: element위로 마우스 커서가 올라갔을 때

const handleMouseEnter=()=>{
	title.innerText="Mouse is here!";
}

cosnt handleMouseLeave=()=>{
	title.innerText="Mouse is gone!";
}
title.addEventListener('mouseenter",handleMouseEnter);

title.addEventListener('mouseleave",handleMouseEnter);

3.event listener을 추가하는 방법
title.onclick=handleTitleClick;
->title 객체의 onclick에 접근하여 이벤트리스너를 추가할 수 있다.

4.resize : window의 화면 크기가 변하는 이벤트

*document를 통해 얻을 수 있는 태그는 title,body,head만 가져올 수 있다.


5.copy : window 화면에서 copy가 이루어졌을 때

6.wifi (online/offline) : 컴퓨터가 네트워크에 연결됐는지 알려주는 이벤트


Html- Web API를 구글링하면
event들을 찾을 수 있다.
https://developer.mozilla.org/ko/docs/Web/Events


첫 번째 과제

마우스가 title위로 올라가면 텍스트가 변경되어야 합니다.
the mouse is here
마우스가 title을 벗어나면 텍스트가 변경되어야 합니다.
the mouse is gone
브라우저 창의 사이즈가 변하면 title이 바뀌어야 합니다.
you just resize
마우스를 우 클릭하면 title이 바뀌어야 합니다.
That was a right click!
title의 색상은 colors 배열에 있는 색을 사용해야 합니다.
.css 와 .html 파일은 수정하지 마세요.
모든 함수 핸들러는 superEventHandler내부에 작성해야 합니다.
모든 조건이 충족되지 못하면 ❌를 받습니다
